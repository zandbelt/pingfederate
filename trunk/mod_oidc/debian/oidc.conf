########################################################################################
#
# Common Settings
#
########################################################################################

# (Mandatory)
# The redirect_uri for this OpenID Connect client; must point to a path on your server
# protected by this module but does not front/return any actual content.
#OIDCRedirectURI https://www.example.com/protected/redirect_uri

# (Mandatory)
# Set a password for crypto purposes, used in state and (optionally) by-value session cookies.
#OIDCCryptoPassphrase <passphrase>

# (Optional)
# When using multiple OpenID Connect Providers, possibly combined with Dynamic Client
# Registration and account-based OP Discovery.
# Directory that holds metadata files (must be writable for the Apache process/user)
# When not specified, it is assumed that we use a single statically configured provider
# as described under the section "OpenID Connect Provider" below.
OIDCMetadataDir /var/cache/apache2/mod_oidc/metadata


########################################################################################
#
# (Optional)
#
# OpenID Connect Client
#
# Settings used by the client in communication with the OpenID Connect Provider(s),
# cq. in Authorization Requests, Dynamic Client Registration and UserInfo Endpoint access.
#
########################################################################################

# (Optional)
# Require a valid SSL server certificate when communicating with the OP.
# (cq. on token endpoint, UserInfo endpoint and Dynamic Client Registration endpoint)
# When not defined, the default value is "On".
#OIDCSSLValidateServer [On|Off]

# (Optional)
# The response type (or OpenID Connect Flow) used: must be one of \"code\", \"id_token\", or \"id_token token\".
# (this serves as default value for discovered OPs too)
# When not defined the "code" response type is used.
#OIDCResponseType [code|id_token|id_token token]

# (Optional)
# Only used for a single static provider has been configured, see below in OpenID Connect Provider.
# Client identifier used in calls to the statically configured OpenID Connect Provider.
#OIDCClientID <client_id>

# (Optional)
# Only used for a single static provider has been configured, see below in OpenID Connect Provider.
# Client secret used in calls to the statically configured OpenID Connect Provider.
# (not used/required in the Implicit Client Profile, cq. when OIDCResponseType is "code")
#OIDCClientSecret <client_secret>

# (Optional)
# The client name that the client registers in dynamic registration with the OP.
# When not defined, no client name will be sent with the registration request.
#OIDCClientName <client_name>

# (Optional)
# The contacts that the client registers in dynamic registration with the OP.
# Must be formatted as e-mail addresses by specification.
# Single value only; when not defined, no contact e-mail address will be sent with the registration request.
#OIDCClientContact <contact>

# (Optional)
# Define the OpenID Connect scope that is requested from the OP (eg. "openid email profile").
# When not defined, the bare minimal scope "openid" is used.
#OIDCScope <scope(s)-separated-by-spaces>

########################################################################################
#
# (Optional)
#
# OpenID Connect Provider
#
# When configuration a single static provider and not using OpenID Connect Provider Discovery.
#
########################################################################################

# OpenID Connect Provider issuer identifier (eg. https://localhost:9031 or accounts.google.com)
#OIDCProviderIssuer <issuer>

# OpenID Connect Provider Authorization Endpoint URL (eg. https://localhost:9031/as/authorization.oauth2)
#OIDCProviderAuthorizationEndpoint <authorization_endpoint>

# OpenID Connect Provider JWKS URL (eg. https://macbook:9031/pf/JWKS)
# cq. the URL on which the signing keys for this OP are hosted, in JWK formatting
#OIDCProviderJwksUri <jwks_url>

# (Optional)
# OpenID Connect Provider Token Endpoint URL (eg. https://localhost:9031/as/token.oauth2)
#OIDCProviderTokenEndpoint <token_endpoint>

# (Optional)
# Authentication method for the OpenID OP Token Endpoint (eg. "client_secret_basic" or "client_secret_post")
# When not defined the default method from the specification is used, cq. "client_secret_basic".
#OIDCProviderTokenEndpointAuth <token_auth_method>

# (Optional)
# OpenID Connect Provider UserInfo Endpoint URL (eg. https://localhost:9031/idp/userinfo.openid)
# When not defined no claims will be resolved from such endpoint.
#OIDCProviderUserInfoEndpoint <user_info_endpoint>

########################################################################################
#
# (Optional)
#
# OAuth 2.0 Settings
#
# Used when this module functions as a Resource Server against a PingFederate Authorization
# Server, validating Bearer reference tokens.
#
########################################################################################

# Client identifier used in token validation calls to the OAuth 2.0 Authorization server.
#OIDCOAuthClientID <client_id>

# Client secret used in token validation calls to the OAuth 2.0 Authorization server.
#OIDCOAuthClientSecret <client_secret>

# OAuth 2.0 Authorization Server token validation endpoint (eg. https://localhost:9031/as/token.oauth2)
#OIDCOAuthEndpoint <token-validation-endpoint>

# (Optional)
# Authentication method for the OAuth 2.0 Authorization Server validation endpoint,
# cq. either "client_secret_basic" or "client_secret_post; when not defined "client_secret_basic" is used.
#OIDCOAuthEndpointAuth <auth_method>

# (Optional)
# Require a valid SSL server certificate when communicating with the Authorization Server.
# (cq. on the token validation endpoint)
# When not defined, the default value is "On".
#OIDCOAuthSSLValidateServer [On|Off]


########################################################################################
#
# (Optional)
#
# Cache Settings
#
########################################################################################

# (Optional)
# Cache type, used for temporary storage that is shared across Apache processes/servers for:
#  a) session state 
#  b) issued nonce values to prevent replay attacks
#  c) validated OAuth 2.0 tokens
#  d) JWK sets that have been retrieved from jwk_uri's
# must be one of \"file\", \"memcache\" or \"shm\". When not defined, "file" is used.
#OIDCCacheType [file|memcache|shm]

# (Optional)
# Directory that holds cache files for session state and validated OAuth 2.0 tokens
# (must be writable for the Apache process/user)
# When not specified a system defined temporary directory (/tmp) will be used.
#OIDCCacheDir /var/cache/apache2/mod_oidc/cache

# (Optional)
# Required when using OIDCCacheType "memcache": specifies the memcache servers
# used for caching (space separated list of <hostname>[:<port>] tuples)
#OIDCMemCacheServers (<hostname>[:<port>])+

# (Optional)
# When using OIDCCacheType "shm": specifies the maximum number of entries that can
# be cached.
# NB: THIS IS A GLOBAL SETTING THAT SHOULD BE SPECIFIED ONLY ONCE ACROSS ALL VHOSTS
#     IF SPECIFIED MULTIPLE TIMES, THE LAST VHOST PROCESSED WILL OVERRIDE
# When not specified, a default of 500 entries will be used.
# OIDCCacheShmMax <number>

########################################################################################
#
# (Optional)
#
# Advanced Settings
#
########################################################################################

# (Optional)
# OpenID Connect session storage type.
# "file" uses file based server-side caching storage.
# "cookie" uses browser-side sessions stored in a cookie.
# When not defined the default "file" is used.
#OIDCSessionType [file|cookie]

# (Optional)
# Defines an external OP Discovery page. That page will be called with:
#    <discovery-url>?oidc_return=<state>&oidc_callback=<callback-url>
#
# An Issuer selection can be passed back to the callback URL as in:
#    <callback-url>?oidc_return=<state>&oidc_provider=[${issuer}|${domain}|${e-mail-style-account-name}]
# where the <oidc_provider> parameter contains the URL-encoded issuer value of
# the selected Provider, or a URL-encoded account name for OpenID
# Connect Discovery purposes (aka. e-mail style identifier), or a domain name.
#
# When not defined the bare-bones internal OP Discovery page is used.
#OIDCDiscoverURL <discovery-url>

# (Optional)
# The algorithm that the OP should use to sign the id_token (used only in dynamic client registration)
# When not defined the default is RS256.
#OIDCIDTokenAlg [RS256|RS384|RS512|PS256|PS384|PS512]

# (Optional)
# the refresh interval in seconds for the JWKs key set that obtained from jwk_uris
# When not defined the default is 3600 seconds.
#OIDCJWKSRefreshInterval <seconds>

# (Optional)
# Define the cookie name for the session cookie.
# When not defined the default is "mod-oidc".
#OIDCCookie <cookie-name>

# (Optional)
# Specify domain element for OIDC session cookie.
# When not defined the default is the server name.
#OIDCCookieDomain <cookie-domain>

# (Optional)
# Define the cookie path for the session cookie.
# When not defined the default is the current path.
#OIDCCookiePath <cookie-path>

# (Optional)
# The prefix to use when setting claims in the HTTP headers.
# When not defined, the default "OIDC_CLAIM_" is used.
#OIDCClaimPrefix <prefix>

# (Optional)
# The delimiter to use when setting multi-valued claims in the HTTP headers.
# When not defined the default "," is used.
#OIDCClaimDelimiter <char>

# (Optional)
# Specify the HTTP header variable name to set with the name of the authenticated user,
# cq. the "sub" claim in the id_token. When not defined no such header is added.
#OIDCAuthNHeader <header-name>

# (Optional)
# Timeout in seconds for long duration HTTP calls. This is used for most outgoing calls.
# When not defined the default of 60 seconds is used.
#OIDCHTTPTimeoutLong <seconds>

# (Optional)
# Timeout in seconds for short duration HTTP calls; used for Client Registration and OP Discovery calls.
# When not defined the default of 5 seconds is used.
#OIDCHTTPTimeoutShort <seconds>

# (Optional)
# Time to live in seconds for state parameter cq. the interval in which the authorization request
# and the corresponding response need to be completed. When not defined the default of 300 seconds is used.
#OIDCStateTimeout <seconds>

# (Optional)
# Scrub user name and claim headers (as configured above) from the user's request.
# The default is "On"; use "Off" only for testing and debugging because it renders your system insecure.
#OIDCScrubRequestHeaders [On|Off] 